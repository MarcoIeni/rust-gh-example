name: Continuous Deployment

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  publish:
    name: Publishing for ${{ matrix.job.os }}
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        rust: [stable]
        job:
          - os: macos-latest
            os_name: macos
            target: x86_64-apple-darwin
            architecture: x86_64
            binary_postfix: ""
            use-cross: false
          - os: ubuntu-latest
            os_name: linux
            target: x86_64-unknown-linux-gnu
            architecture: x86_64
            binary_postfix: ""
            use-cross: false
          - os: windows-latest
            os_name: windows
            target: x86_64-pc-windows-msvc
            architecture: x86_64
            binary_postfix: ".exe"
            use-cross: false
          - os: ubuntu-latest
            os_name: linux
            target: aarch64-unknown-linux-gnu
            architecture: arm64
            binary_postfix: ""
            use-cross: true
          - os: ubuntu-latest
            os_name: linux
            target: i686-unknown-linux-gnu
            architecture: i686
            binary_postfix: ""
            use-cross: true


    steps:
      - name: Installing Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: ${{ matrix.job.use-cross }}
          toolchain: ${{ matrix.rust }}
          args: --release --target ${{ matrix.job.target }}

      - name: Packaging final binary
        shell: bash
        run: |
          cd target/${{ matrix.job.target }}/release
          BINARY_NAME=rust-gh-example${{ matrix.job.binary_postfix }}
          strip $BINARY_NAME

          RELEASE_NAME=rust-gh-example-${GITHUB_REF/refs\/tags\//}-${{ matrix.job.os_name }}-${{ matrix.job.architecture }}
          tar czvf $RELEASE_NAME.tar.gz $BINARY_NAME

          if [[ ${{ runner.os }} == 'Windows' ]]; then
            certutil -hashfile $RELEASE_NAME.tar.gz sha256 | grep -E [A-Fa-f0-9]{64} > $RELEASE_NAME.sha256
          else
            shasum -a 256 $RELEASE_NAME.tar.gz > $RELEASE_NAME.sha256
          fi
      - name: Releasing assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/${{ matrix.job.target }}/release/rust-gh-example-*.tar.gz
            target/${{ matrix.job.target }}/release/rust-gh-example-*.sha256
          body: |
            ## Changes

            See CHANGELOG.md

            ## Which release should I download?

            | linux-x86_64   | 64-bit Linux   |
            | windows-x86_64 | 64-bit Windows |
            | macos-x86_64   | 64-bit macOS   |

